{"version":3,"sources":["redux/cake/cakeAction.js","redux/cake/cakeTypes.js","components/CakeContainer.js","components/IceCreamContainer.js","redux/icecream/icecreamAction.js","redux/icecream/icecreamTypes.js","redux/cake/cakeReducer.js","redux/icecream/icecreamReducer.js","redux/user/userReducer.js","redux/user/userTypes.js","redux/rootReducer.js","redux/store.js","components/HooksCakeContainer.js","components/NewCakeContainer.js","components/ItemContainer.js","components/UserContainer.js","redux/user/userActions.js","App.js","reportWebVitals.js","index.js"],"names":["buyCake","number","type","payload","connect","state","numberOfCakes","cakes","dispatch","props","onClick","numberOfIceCreams","iceCreams","buyIceCream","initialState","cakeReducer","action","initialStateIcecream","iceCreamReducer","loading","users","error","userReducer","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","HooksCakeContainer","useState","setNumber","value","onChange","e","target","ownProps","items","cake","buyItem","userData","fetchUsers","axios","get","then","response","data","fetchUserSuccess","catch","errorMessage","message","fetchUserFailure","addUsers","user","name","addUserRequest","post","addUserSuccess","addUserFailure","userName","setUserName","useEffect","Container","InputGroup","className","Form","Control","placeholder","aria-label","Button","variant","map","index","Row","Col","lg","ListGroup","Item","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e4cdfa10.chunk.js","sourcesContent":["import { BUY_CAKE } from \"./cakeTypes\"\r\n\r\nexport const buyCake = (number = 1) => {\r\n    return {\r\n        type: BUY_CAKE,\r\n        payload: number\r\n    }\r\n}","export const BUY_CAKE = \"BUY_CAKE\";","import React from 'react'\r\nimport { buyCake } from '../redux'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction CakeContainer(props) {\r\n  return (\r\n    <div>\r\n    <h2>Number of cakes: {props.numberOfCakes}</h2>\r\n    <button onClick={props.buyCake}>Buy Cake</button>\r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        numberOfCakes: state.cakes.numberOfCakes\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        buyCake: () => dispatch(buyCake())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeContainer);\r\n","import React from 'react'\r\nimport { buyIceCream } from '../redux'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction IceCreamContainer(props) {\r\n  return (\r\n    <div>\r\n    <h2>Number of IceCreams: {props.numberOfIceCreams}</h2>\r\n    <button onClick={props.buyIceCream}>Buy IceCream</button>\r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        numberOfIceCreams: state.iceCreams.numberOfIceCreams\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        buyIceCream: () => dispatch(buyIceCream())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IceCreamContainer);\r\n","import { BUY_ICECREAM } from \"./icecreamTypes\";\r\n\r\nexport const buyIceCream = () => {\r\n    return {\r\n        type: BUY_ICECREAM\r\n    }\r\n}","export const BUY_ICECREAM = 'BUY_ICECREAM';","import { BUY_CAKE } from \"./cakeTypes\"\r\n\r\nconst initialState = {\r\n    numberOfCakes: 10\r\n}\r\n\r\nconst cakeReducer = ( state = initialState, action) => {\r\n    switch(action.type) {\r\n        case BUY_CAKE:\r\n            return {\r\n                ...state,\r\n                numberOfCakes: state.numberOfCakes - action.payload\r\n            }\r\n            default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default cakeReducer;","import { BUY_ICECREAM } from \"./icecreamTypes\"\r\n\r\nconst initialStateIcecream = {\r\n    numberOfIceCreams : 20\r\n}\r\n\r\nconst iceCreamReducer = (state = initialStateIcecream, action) => {\r\n    switch(action.type) {\r\n        case BUY_ICECREAM: \r\n        return {\r\n            ...state,\r\n            numberOfIceCreams: state.numberOfIceCreams > 0 ? state.numberOfIceCreams - 1 : 0\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default iceCreamReducer","import { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_FAILURE, ADD_USER_REQUEST, ADD_USER_SUCCESS, ADD_USER_FAILURE} from \"./userTypes\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    users: [],\r\n    error: ''\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n\r\n            }\r\n        }\r\n        case FETCH_USER_SUCCESS: {\r\n            return {\r\n                users: action.payload,\r\n                loading: false,\r\n                error: ''\r\n            }\r\n        }\r\n        case FETCH_USER_FAILURE: {\r\n            return {\r\n                users: [],\r\n                loading:false,\r\n                error: action.payload\r\n\r\n            }\r\n        }\r\n\r\n        case ADD_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n\r\n            }\r\n        }\r\n        case ADD_USER_SUCCESS: {\r\n            return {\r\n                users: [...state.users, action.payload],\r\n                loading: false,\r\n                error: ''\r\n            }\r\n        }\r\n        case ADD_USER_FAILURE: {\r\n            return {\r\n                users: [],\r\n                loading:false,\r\n                error: action.payload\r\n\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAILURE ='FETCH_USER_FAILURE'\r\n\r\nexport const ADD_USER_REQUEST = 'ADD_USER_REQUEST';\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\r\nexport const ADD_USER_FAILURE ='ADD_USER_FAILURE'","import { combineReducers } from 'redux';\r\n\r\nimport cakeReducer from './cake/cakeReducer';\r\nimport iceCreamReducer from './icecream/icecreamReducer';\r\nimport userReducer from './user/userReducer';\r\n\r\nconst rootReducers = combineReducers({\r\n    cakes: cakeReducer,\r\n    iceCreams: iceCreamReducer,\r\n    users: userReducer\r\n})\r\n\r\nexport default rootReducers;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducers from './rootReducer';\r\nimport logger from 'redux-logger';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducers, composeWithDevTools(applyMiddleware(logger, thunk)));\r\n\r\nexport default store;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { buyCake } from '../redux'\r\n\r\nfunction HooksCakeContainer() {\r\n   const numberOfCakes =  useSelector(state => state.cakes.numberOfCakes);\r\n   const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n        <h2>Number of cakes: {numberOfCakes}</h2>\r\n        <button onClick={() => dispatch(buyCake())}>Buy Cake</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HooksCakeContainer","import React, {useState} from 'react'\r\nimport { buyCake } from '../redux'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction NewCakeContainer(props) {\r\n    const [number, setNumber] = useState(1);\r\n  return (\r\n    <div>\r\n    <h2>Number of cakes: {props.numberOfCakes}</h2>\r\n    <input type = 'text' value={number} onChange={(e) => setNumber(e.target.value)} />\r\n    <button onClick={() => props.buyCake(number)}>Buy Number of Cakes</button>\r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        numberOfCakes: state.cakes.numberOfCakes\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        buyCake: (number) => dispatch(buyCake(number))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCakeContainer);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { buyCake, buyIceCream } from '../redux';\r\n\r\nfunction ItemContainer(props) {\r\n  return (\r\n    <div>\r\n        <h2>Item - {props.items} </h2>\r\n        <button onClick={props.buyItem}>Buy Items</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const itemState = ownProps.cake ? state.cakes.numberOfCakes : state.iceCreams.numberOfIceCreams;\r\n\r\n    return {\r\n        items : itemState\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const dispatchFunction = ownProps.cake ? () => dispatch(buyCake()) : () => dispatch(buyIceCream());\r\n    return {\r\n        buyItem: dispatchFunction\r\n    }\r\n\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(ItemContainer)\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {fetchUsers, addUsers} from '../redux'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction UserContainer({userData, fetchUsers, addUsers}) {\r\n\r\n  const [userName, setUserName] = useState('')\r\n\r\n  useEffect(() =>{\r\n    fetchUsers()\r\n  }, [])\r\n  \r\n  return userData.loading ? (\r\n  <h2>Loading Date....</h2>) :\r\n  userData.error ? (\r\n    <h2>{userData.error}</h2>\r\n  ) :\r\n  <Container>\r\n  <div>\r\n    <h2>Users List</h2>\r\n    <InputGroup className=\"mb-3\">\r\n        <Form.Control\r\n          placeholder=\"Username\"\r\n          aria-label=\"Username\"\r\n          value={userName} onChange={(e) => setUserName(e.target.value)}\r\n        />\r\n    </InputGroup>\r\n    <Button variant=\"primary\"  onClick={(e) => addUsers(userName)}>Add Name</Button>\r\n    <Container className=\"mt-2\" >\r\n    {userData && userData.users &&\r\n    userData.users.map((user, index) =>\r\n    <Row className=\"justify-content-md-center\">\r\n      <Col lg=\"4\">\r\n      <ListGroup>\r\n      <ListGroup.Item key={index}>{user.name}</ListGroup.Item>\r\n      </ListGroup>\r\n      </Col>\r\n    </Row>\r\n    ) }\r\n    </Container>\r\n    </div>\r\n    </Container>\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    userData: state.users\r\n  } \r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\nreturn {\r\n  fetchUsers: () => dispatch(fetchUsers()),\r\n  addUsers: (user) => dispatch(addUsers({name: user}))\r\n}\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer)","import { FETCH_USER_FAILURE, FETCH_USER_SUCCESS, FETCH_USER_REQUEST, ADD_USER_REQUEST, ADD_USER_SUCCESS, ADD_USER_FAILURE } from \"./userTypes\";\r\nimport axios from 'axios'\r\n\r\nexport const fetchUserRequest = () => {\r\n return {\r\n    type: FETCH_USER_REQUEST\r\n }\r\n}\r\n\r\nexport const fetchUserSuccess = (users) => {\r\n return {\r\n    type: FETCH_USER_SUCCESS,\r\n    payload: users\r\n }\r\n}\r\n\r\nexport const fetchUserFailure = (error) => {\r\n return {\r\n    type: FETCH_USER_FAILURE,\r\n    payload: error\r\n }\r\n}\r\n\r\nexport const addUserRequest = ({name:user}) => {\r\n   return {\r\n      type: ADD_USER_REQUEST\r\n   }\r\n  }\r\n  \r\n  export const addUserSuccess = (user) => {\r\n   return {\r\n      type: ADD_USER_SUCCESS,\r\n      payload: user\r\n   }\r\n  }\r\n  \r\n  export const addUserFailure = (error) => {\r\n   return {\r\n      type: ADD_USER_FAILURE,\r\n      payload: error\r\n   }\r\n  }\r\n\r\nexport const fetchUsers = () => {\r\n   return function(dispatch) {\r\n      dispatch(fetchUserRequest())\r\n      axios.get('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => {\r\n         const users = response.data;\r\n         dispatch(fetchUserSuccess(users))\r\n      })\r\n      .catch(error => {\r\n         const errorMessage = error.message;\r\n         dispatch(fetchUserFailure(errorMessage))\r\n      })\r\n   }\r\n}\r\n\r\nexport const addUsers = (user) => {\r\n   return function(dispatch) {\r\n      dispatch(addUserRequest(user))\r\n      axios.post('https://jsonplaceholder.typicode.com/users', user)\r\n      .then(response => {\r\n         const users = response.data;\r\n         dispatch(addUserSuccess(user))\r\n      })\r\n      .catch(error => {\r\n         const errorMessage = error.message;\r\n         dispatch(addUserFailure(errorMessage))\r\n      })\r\n   }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport CakeContainer from './components/CakeContainer';\r\nimport IceCreamContainer from './components/IceCreamContainer';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport HooksCakeContainer from './components/HooksCakeContainer';\r\nimport NewCakeContainer from './components/NewCakeContainer';\r\nimport ItemContainer from './components/ItemContainer';\r\nimport UserContainer from './components/UserContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      {/* <ItemContainer cake />\r\n      <ItemContainer />\r\n      <CakeContainer />\r\n      <NewCakeContainer />\r\n      <HooksCakeContainer />\r\n      <IceCreamContainer /> */}\r\n      <UserContainer />\r\n    </div>\r\n    </Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}